<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Gizmo.WPF">

    <local:HeightDivideConverter x:Key="HeightDivideConverter" />

    <Style x:Key="VerticalTabPanelToggleButtonLeft" TargetType="{x:Type local:UIToggleButton}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBorderBrush}}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, WindowForegroundBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UIToggleButton}">
                    <Grid>
                        <Grid.Effect>
                            <DropShadowEffect Color="{DynamicResource {ComponentResourceKey local:UITheme, ShadowColor}}" BlurRadius="2" Opacity="1" ShadowDepth="0" Direction="180"/>
                        </Grid.Effect>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Path x:Name="PART_BackgroundTop" Data="M21,0 C20,10 0,10 0.5,20 H20 z" Fill="{TemplateBinding Background}"/>
                        <Path x:Name="PART_borderTop" Data="M21,0 C20,10 0,10 0.5,20" Stroke="{TemplateBinding BorderBrush}"/>
                        <Border x:Name="PART_Background" Margin="0" Grid.Row="1" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent"></Border>
                        <Border x:Name="PART_border" Margin="0" Grid.Row="1" CornerRadius="{TemplateBinding CornerRadius}" Background="Transparent" BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" />
                        <Path Grid.Row="2" x:Name="PART_BackgroundBottom" Data="M0.5,0 C0,10 20,10 21,20 V0 z" Fill="{TemplateBinding Background}"/>
                        <Path Grid.Row="2" x:Name="PART_borderBottom" Data="M0.5,0 C0,10 20,10 21,20" Stroke="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundTop" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_borderTop" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundBottom" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_borderBottom" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundTop" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_borderTop" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundBottom" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_borderBottom" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, SelectForegroundBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalTabPanelToggleButtonRight" TargetType="{x:Type local:UIToggleButton}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBorderBrush}}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, WindowForegroundBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UIToggleButton}">
                    <Grid>
                        <Grid.Effect>
                            <DropShadowEffect Color="{DynamicResource {ComponentResourceKey local:UITheme, ShadowColor}}" BlurRadius="2" Opacity="1" ShadowDepth="0" Direction="0"/>
                        </Grid.Effect>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Path x:Name="PART_BackgroundTop" Data="M-0.5,0 C0 10 20 10 19.5 20h-20 z" Fill="{TemplateBinding Background}"/>
                        <Path x:Name="PART_borderTop" Data="M-0.5,0 C0 10 20 10 19.5 20" Stroke="{TemplateBinding BorderBrush}"/>
                        <Border x:Name="PART_Background" Margin="0" Grid.Row="1" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent"></Border>
                        <Border x:Name="PART_border" Margin="0" Grid.Row="1" CornerRadius="{TemplateBinding CornerRadius}" Background="Transparent" BorderThickness="0,0,1,0" BorderBrush="{TemplateBinding BorderBrush}" />
                        <Path Grid.Row="2" x:Name="PART_BackgroundBottom" Data="m19.5 0c0 10-20 10-20 20v-20 z" Fill="{TemplateBinding Background}"/>
                        <Path Grid.Row="2" x:Name="PART_borderBottom" Data="m19.5 0c0 10-20 10-20 20" Stroke="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundTop" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_borderTop" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundBottom" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_borderBottom" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundTop" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_borderTop" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundBottom" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_borderBottom" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, SelectForegroundBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalTabPanelToggleButtonTop" TargetType="{x:Type local:UIToggleButton}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBorderBrush}}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, WindowForegroundBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UIToggleButton}">
                    <Grid>
                        <Grid.Effect>
                            <DropShadowEffect Color="{DynamicResource {ComponentResourceKey local:UITheme, ShadowColor}}" BlurRadius="2" Opacity="1" ShadowDepth="0" Direction="90"/>
                        </Grid.Effect>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="0" x:Name="PART_BackgroundLeft" Data="M20,0.5C10,0 10,20 0,20 H20 z" Fill="{TemplateBinding Background}"/>
                        <Path Grid.Column="0" x:Name="PART_borderLeft" Data="M20,0.5C10,0 10,20 0,20" Stroke="{TemplateBinding BorderBrush}"/>
                        <Border Grid.Column="1" x:Name="PART_Background" Margin="0" Background="{TemplateBinding Background}" BorderThickness="0,1,0,0" BorderBrush="Transparent"></Border>
                        <Border Grid.Column="1" x:Name="PART_border" Margin="0"  Background="Transparent" BorderThickness="0,1,0,0" BorderBrush="{TemplateBinding BorderBrush}" />
                        <Path Grid.Column="2" x:Name="PART_BackgroundRight" Data="M0,0.5 C10,0 10,20 20,20 H-20 z" Fill="{TemplateBinding Background}"/>
                        <Path Grid.Column="2" x:Name="PART_borderRight" Data="M0,0.5 C10,0 10,20 20,20" Stroke="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundLeft" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_borderLeft" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundRight" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_borderRight" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBorderBrush}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundLeft" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_borderLeft" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter TargetName="PART_BackgroundRight" Property="Fill" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_borderRight" Property="Stroke" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBorderBrush}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, SelectForegroundBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:UITabPanelItem}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, WindowForegroundBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UITabPanelItem}">
                    <local:UIToggleButton x:Name="PART_Header"
                                Margin="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                VerticalAlignment="Top"
                                Style="{StaticResource VerticalTabPanelToggleButtonLeft}"
                                HorizontalAlignment="Right" 
                                IsChecked="{Binding IsSelected, RelativeSource={RelativeSource  TemplatedParent}, Mode=TwoWay}"
                                Content="{TemplateBinding Header}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Left">
                            <Setter TargetName="PART_Header" Property="Style" Value="{StaticResource VerticalTabPanelToggleButtonLeft}" />
                            <Setter TargetName="PART_Header" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_Header" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_Header" Property="Width" Value="20" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Right">
                            <Setter TargetName="PART_Header" Property="Style" Value="{StaticResource VerticalTabPanelToggleButtonRight}" />
                            <Setter TargetName="PART_Header" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_Header" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_Header" Property="Width" Value="20" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Top">
                            <Setter TargetName="PART_Header" Property="Style" Value="{StaticResource HorizontalTabPanelToggleButtonTop}" />
                            <Setter TargetName="PART_Header" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_Header" Property="Height" Value="20" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalTabPanelTemplateLeft" TargetType="{x:Type local:UITabPanel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32" MinWidth="32" MaxWidth="32" />
                <ColumnDefinition Name="ContentColumn" MinWidth="230" Width="230" MaxWidth="420" />
            </Grid.ColumnDefinitions>
            <ItemsControl Margin="0,10,0,0" Grid.Column="0" ItemsSource="{TemplateBinding Items}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <Border Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
            <ContentPresenter Grid.Column="1" Margin="0,1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsExpanded" Value="False"/>
                    <Condition Property="IsExpandable" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="ContentColumn" Property="MinWidth" Value="0" />
                <Setter TargetName="ContentColumn" Property="Width" Value="0" />
            </MultiTrigger>
            <Trigger Property="IsExpandable" Value="False">
                <Setter TargetName="ContentColumn" Property="MinWidth" Value="0" />
                <Setter TargetName="ContentColumn" Property="Width" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalTabPanelTemplateRight" TargetType="{x:Type local:UITabPanel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Name="ContentColumn" MinWidth="230" Width="230" MaxWidth="420" />
                <ColumnDefinition Width="32" MinWidth="32" MaxWidth="32" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
            <ContentPresenter Margin="1" Grid.Column="0" />
            <ItemsControl Margin="0,10,0,0" Grid.Column="1" ItemsSource="{TemplateBinding Items}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsExpanded" Value="False"/>
                    <Condition Property="IsExpandable" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="ContentColumn" Property="MinWidth" Value="0" />
                <Setter TargetName="ContentColumn" Property="Width" Value="0" />
            </MultiTrigger>
            <Trigger Property="IsExpandable" Value="False">
                <Setter TargetName="ContentColumn" Property="MinWidth" Value="0" />
                <Setter TargetName="ContentColumn" Property="Width" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalTabPanelTemplateTop" TargetType="{x:Type local:UITabPanel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32" MinHeight="32" MaxHeight="32" />
                <RowDefinition Name="ContentRow" Height="Auto" />
            </Grid.RowDefinitions>
            <ItemsControl Margin="10,0,0,0" Grid.Row="0" ItemsSource="{TemplateBinding Items}" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <Border Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
            <ContentPresenter Margin="1" Grid.Row="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsExpanded" Value="False"/>
                    <Condition Property="IsExpandable" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="ContentRow" Property="MinHeight" Value="0" />
                <Setter TargetName="ContentRow" Property="Height" Value="0" />
            </MultiTrigger>
            <Trigger Property="IsExpandable" Value="False">
                <Setter TargetName="ContentRow" Property="MinHeight" Value="0" />
                <Setter TargetName="ContentRow" Property="Height" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:UITabPanel}">
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, NodeCanvasBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlBorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, WindowForegroundBrush}}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Left">
                <Setter Property="Template" Value="{StaticResource VerticalTabPanelTemplateLeft}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Right">
                <Setter Property="Template" Value="{StaticResource VerticalTabPanelTemplateRight}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Top">
                <Setter Property="Template" Value="{StaticResource HorizontalTabPanelTemplateTop}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>