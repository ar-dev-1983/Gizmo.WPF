<ResourceDictionary x:Class="Gizmo.WPF.ToolWindowStyle" 
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Gizmo.WPF">

    <Style x:Key="{ComponentResourceKey local:UITheme, ToolWindowStyleTitleBarButton}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, WindowForegroundBrush}}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="{DynamicResource {ComponentResourceKey local:UITheme, WindowBackgroundBrush}}" BorderThickness="0" BorderBrush="{DynamicResource {ComponentResourceKey local:UITheme, WindowBackgroundBrush}}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlHighlightBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter TargetName="PART_border" Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey local:UITheme, ControlSelectBrush}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, SelectForegroundBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:UITheme}, ResourceId=ToolWindowStyle}"  TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey local:UITheme, WindowForegroundBrush}}" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    NonClientFrameEdges="None"
                    GlassFrameThickness="0"
                    ResizeBorderThickness="3"
                    CornerRadius="0"
                    CaptionHeight="20"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="PART_Container" Padding="0">
                        <Grid Margin="0">
                            <Border x:Name="PART_Border" Width="Auto" Height="Auto" Padding="0" Background="{DynamicResource {ComponentResourceKey local:UITheme, WindowBackgroundBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey local:UITheme, WindowBorderBrush}}" BorderThickness="1">
                                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">
                                    <Border x:Name="TitleBar" Background="{DynamicResource {ComponentResourceKey local:UITheme, WindowBackgroundBrush}}" BorderThickness="0" DockPanel.Dock="Top">
                                        <Grid Height="20">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="Caption" IsHitTestVisible="False" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Segoe UI" FontSize="12" Opacity="0.66" Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Button WindowChrome.IsHitTestVisibleInChrome="True" Click="CloseButtonClick" x:Name="CloseButton" Grid.Column="1" Width="20" Height="20" VerticalAlignment="Top" Style="{DynamicResource {ComponentResourceKey local:UITheme, ToolWindowStyleTitleBarButton}}">
                                                <Path Data="M0,0 L8,8 M0,8 L8,0" Stretch="None" Stroke="{Binding ElementName=CloseButton, Path=Foreground}" StrokeThickness="1.5" />
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border BorderBrush="{DynamicResource {ComponentResourceKey local:UITheme, WindowBackgroundBrush}}" BorderThickness="1">
                                        <ContentPresenter />
                                    </Border>
                                </DockPanel>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>